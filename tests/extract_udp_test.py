from src.tcpdump import hex_from_tcpdump
from src.udp import extract_udp_payload

def test_extract_udp():
    data = \
        b'\x45\x00\x00\x35\x1a\xeb\x40\x00\x40\x11\x21\xcb\x7f\x00\x00\x01' \
        b'\x7f\x00\x00\x01\xf3\x67\x20\x6f\x00\x21\xfe\x34\x10\x0c\x01\x42' \
        b'\x78\x0d\x88\x55\xe9\xf0\x87\xe6\x07\x68\xd6\xd0\x5b\xf8\x69\x2f' \
        b'\xff\x8c\x14\x37\x00'

    got = extract_udp_payload(data)
    expect = (b'\x10\x0c\x01Bx\r\x88U\xe9\xf0\x87\xe6\x07h\xd6\xd0[\xf8i/\xff\x8c\x147\x00', ['extracting udp payload from ipv4 packet ...'])
    assert got == expect


def test_extract_ctrl_disconnect_from_ipv6():
    # tcpdump -x
    data = \
        b'\x60\x04\x33\xb1\x00\x10\x11\x40\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x00\x00\x01\xd9\xc8\x20\x6f\x00\x10\x00\x23' \
        b'\x04\x0f\x00\x26\x3e\x5a\x37\x04'
    got = extract_udp_payload(data)
    expect = (b'\x04\x0f\x00&>Z7\x04', ['extracting udp payload from ipv6 packet ...'])
    assert got == expect


def test_extract_snap_from_ipv6():
    # tcpdump -x
    data = \
        b'\x60\x0a\xa5\x6d\x00\x1d\x11\x40\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x00\x00\x01\x20\x6f\xd9\xc8\x00\x1d\x00\x30' \
        b'\x00\x19\x02\x23\xec\x92\x03\x00\x05\x15\x9e\xa0\x05\x0c\x00\x05' \
        b'\x0f\x9e\xa0\x05\x02'

    expected = (b'\x00\x19\x02#\xec\x92\x03\x00\x05\x15\x9e\xa0\x05\x0c\x00\x05\x0f\x9e\xa0\x05\x02', ['extracting udp payload from ipv6 packet ...'])
    assert extract_udp_payload(data) == expected


def test_extract_ethernet_input_timing_and_snap_empty():
    # real packet from tcpdump -xx
    # verified expected value with wireshark
    data = \
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x86\xdd\x60\x0a' \
        b'\xa5\x6d\x00\x1d\x11\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
        b'\x00\x00\x00\x00\x00\x01\x20\x6f\xd9\xc8\x00\x1d\x00\x30\x00\x19' \
        b'\x02\x23\xec\x92\x03\x00\x05\x15\x9e\xa0\x05\x0c\x00\x05\x0f\x9e' \
        b'\xa0\x05\x02'

    assert extract_udp_payload(data) == (b'\x00\x19\x02#\xec\x92\x03\x00\x05\x15\x9e\xa0\x05\x0c\x00\x05\x0f\x9e\xa0\x05\x02', ['extracting udp payload from ethernet packet ...'])

